<UserControl x:Class="AdiSample.UserControls.UserControl04.UC04_07_ButtonsFeatures"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AdiSample.UserControls.UserControl04"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid Background="LightGray">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="1.5*"/>
            <RowDefinition Height="1.8*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="3*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0">
            <Button Width="100">Zwykły Button</Button>
            <TextBlock Background="Ivory">
                <Run Text="Najzwyklejszy Button na świecie, ten w swojej niezwykłości nic nie robi"/>
            </TextBlock>
        </StackPanel>
        <StackPanel Grid.Row="1">
            <RepeatButton Delay="300" Interval="100" Width="150" Height="35" Click="RepeatButton_Click">
                <Polyline Stroke="Black" Fill="Black" Points="40,20 0,20 20,0"></Polyline>
            </RepeatButton>
            <Label x:Name="counterRepeatButton" Content="0" HorizontalAlignment="Center"/>
            <TextBlock Background="Ivory" Height="20" Text="Button Repeat - liczy dopóki jest wciśnięty. Pierwszy count jest na innym interwale czasowym jak następne"/>
        </StackPanel>
        <StackPanel Grid.Row="2">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid  Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <ToggleButton Grid.Column="0" IsThreeState="False" x:Name="adiToggleButtonFalse" Content="ToggleButton IsThreeState=False" Click="ToggleButton_Click" Checked="HandleCheck" Unchecked="HandleUnchecked" Width="220" />
                    <TextBlock x:Name="textBlockTG" Margin="10" Width="200" Grid.Column="0" Grid.Row="1"/>
                    <Button x:Name="ButtonForToggleButton" Content="Ustaw Toggle Button na null" Grid.Row="2" Click="HandleNull" Width="320"/>
                    <ToggleButton Grid.Column="1" IsThreeState="False" x:Name="adiToggleButtonStateTrue" Content="ToggleButton IsThreeState=True" Click="ToggleButton_Click" Checked="HandleCheck02" Unchecked="HandleUnchecked02" Width="220" />
                    <TextBlock x:Name="textBlockTG02" Margin="10" Width="200" Grid.Column="1" Grid.Row="1"/>
                    <Button x:Name="ButtonForToggleButton02" Content="Ustaw Toggle Button na null - tutaj nie ustawimy na Null" Grid.Column="1" Grid.Row="2" Click="HandleNull02" Width="320"/>
                </Grid>
                <TextBlock Text="Właściwość Toggle Button w zależności od zmiennej IsThreeState. Przyjmuje trzy stany (True, fals, Null) lub dwa (True, False). " Background="Ivory" Grid.Row="1"/>
            </Grid>
        </StackPanel>
            
    </Grid>
</UserControl>
