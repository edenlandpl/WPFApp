<UserControl x:Class="AdiSample.UserControls.UserControl03.UC03_22_Triggers"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AdiSample.UserControls.UserControl03"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="buttonStyleTriggers" TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <RotateTransform Angle="10"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="Background" Value="Purple"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="RenderTransformOrigin" Value=".5,.5"/>
        </Style>
        <Style x:Key="AlternatingRowStyle" TargetType="{x:Type Control}" >
            <Setter Property="Background" Value="Green"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="buttonTriggerSumaLogiczna" TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True" >
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <RotateTransform Angle="10"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="FontSize" Value="22"/>
                    <Setter Property="Background" Value="Purple"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Height" Value="50"/>
                    <Setter Property="Width" Value="50"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <RotateTransform Angle="10"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="FontSize" Value="22"/>
            <Setter Property="Background" Value="Purple"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Width" Value="50"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="buttonTriggerIloczynLogiczny" TargetType="{x:Type Button}">
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsFocused" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <RotateTransform Angle="-10"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="Black"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0">
            <Button Style="{StaticResource buttonStyleTriggers}">1</Button>
            <TextBlock Background="Ivory" TextWrapping="Wrap">
                Wyzwalcza właściwośći - button. Zmiana Backround następuje podczas jawnego ustawienia poprzez Trigger
            </TextBlock>
        </StackPanel>

        <!--ListBox i TreeView na jednym stylu-->
        <StackPanel Grid.Row="1">
            <ListBox AlternationCount="2" Margin="10" Width="200"
ItemContainerStyle="{StaticResource AlternatingRowStyle}">
                <ListBoxItem>Element 1</ListBoxItem>
                <ListBoxItem>Element 2</ListBoxItem>
                <ListBoxItem>Element 3</ListBoxItem>
                <ListBoxItem>Element 4</ListBoxItem>
                <ListBoxItem>Element 5</ListBoxItem>
            </ListBox>
            <TreeView AlternationCount="2" Margin="10" Width="200"
ItemContainerStyle="{StaticResource AlternatingRowStyle}">
                <TreeViewItem Header="Korzeń 1" AlternationCount="2"
ItemContainerStyle="{StaticResource AlternatingRowStyle}">
                    <TreeViewItem Header="Podelement 1"/>
                    <TreeViewItem Header="Podelement 2"/>
                    <TreeViewItem Header="Podelement 3"/>
                </TreeViewItem>
                <TreeViewItem Header="Korzeń 2" AlternationCount="2"
ItemContainerStyle="{StaticResource AlternatingRowStyle}">
                    <TreeViewItem Header="Podelement 1"/>
                    <TreeViewItem Header="Podelement 2"/>
                    <TreeViewItem Header="Podelement 3"/>
                </TreeViewItem>
            </TreeView>
            <TextBlock Background="Ivory" TextWrapping="WrapWithOverflow">
                Przypisanie tego samego stylu dla ListBox i Treeview. Aby przykład działał prawidłowo
                każdy TreeViewItem musi
mieć we właściwości AlternationCount wartość 2, a do ItemContainerStyle przypisany odpowiedni styl.
Wynika to z tego, że TreeViewItem (sama kontrolka) nie dziedziczy tych ustawień z elementu nadrzędnego.
            </TextBlock>
        </StackPanel>
        <StackPanel Grid.Row="2">
            <StackPanel Width="200">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <DataTrigger
Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}"
Value="disabled">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Background"
Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
                    </Style>
                </StackPanel.Resources>
                <TextBox Margin="3"/>
            </StackPanel>
            <TextBlock Background="Ivory" TextWrapping="WrapWithOverflow">
                WYZWALACZ DANYCH <LineBreak/>
                Wpisana wartość koloru jest wartością Background TextBlock. Przy wpisaniu disabled, TextBlock otrzymuje wartość False
                Element TextBox posiada obiekt Style wyzwalający ustawienie IsEnabled na podstawie właściwości Text,
            </TextBlock>
        </StackPanel>
        <StackPanel Grid.Row="3">
            <TextBlock Background="LightGray"/>
            <TextBlock Background="Ivory" HorizontalAlignment="Center">
                KOMBINACJE WYZWALACZY
            </TextBlock>
            <TextBlock Text="Suma logiczna" Background="Ivory"/>
            <StackPanel>
                <Button Width="50" Height="50" Style="{StaticResource buttonTriggerSumaLogiczna}">11</Button>
                <TextBlock Background="Ivory" TextWrapping="WrapWithOverflow">
                    Suma Logiczna - Wyzwalacz zadziała po najechaniu myszką (focus) lub po kliknięciu na niego (po kliknięciu działa do ponownego kliknięcia)
                </TextBlock>
            </StackPanel>
            <StackPanel>
                <TextBlock Text="Iloczyn logiczny" Background="Ivory"/>
                <Button Width="50" Height="50" Style="{StaticResource buttonTriggerIloczynLogiczny}">22</Button>
                <TextBlock Background="Ivory" TextWrapping="WrapWithOverflow">
                    Iloczyn logiczny - Wyzwalacz zadziała po najechaniu myszką (focus) i po kliknięciu na niego
                </TextBlock>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>